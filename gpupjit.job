#!/bin/bash -x
#SBATCH --job-name=JAXHPC
#SBATCH --partition=dev_gpu_a100_il
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1               # ✅ Only 1 task
#SBATCH --gpus-per-node=4                 # ✅ Use all 4 GPUs in a single process
#SBATCH --time=00:30:00
#SBATCH --mem=16G
#SBATCH --export=ALL

set -o pipefail
export PYTHONUNBUFFERED=1

# ✅ Load modules
module load devel/python/3.11.7-gnu-14.2
module load devel/cuda/12.8

ENV_DIR=$HOME/pjit_jax_env

# ✅ Setup environment
if [ ! -d "$ENV_DIR" ]; then
    python -m venv $ENV_DIR
    source $ENV_DIR/bin/activate
    pip install --upgrade pip
    pip install --upgrade "jax[cuda12]"  # Installs jaxlib with CUDA support
    pip install numpy matplotlib
else
    source $ENV_DIR/bin/activate
fi

# ✅ Optional: prevent full GPU memory preallocation
export XLA_PYTHON_CLIENT_PREALLOCATE=false

# ✅ Fix MPI path issues (even though unused here)
unset LD_LIBRARY_PATH

# ✅ GPU check
nvidia-smi
python -c "import jax; print('JAX devices:', jax.devices())"

# ✅ Set JAX distributed variables for single-process mode
export JAX_COORDINATOR=localhost:1234
export JAX_NUM_PROCESSES=1
export JAX_PROCESS_ID=0

# ✅ Run your multi-GPU PJIT simulation with one process
python PJIT.py
